from fastapi import FastAPI, Request, Form
from fastapi.responses import HTMLResponse
from fastapi.staticfiles import StaticFiles
from fastapi.templating import Jinja2Templates
from starlette.responses import JSONResponse
from mem_dao import memDao
from pydantic.main import BaseModel


class Mem(BaseModel):
    m_seq:int = None
    m_name:str = None
    tel:str = None
    army_yn:str = None

app = FastAPI()

app.mount("/static", StaticFiles(directory="static"), name="static")
templates = Jinja2Templates(directory="templates")


@app.get("/", response_class=HTMLResponse)
@app.get("/mem", response_class=HTMLResponse)
async def mem_list(request: Request):
    return templates.TemplateResponse("member.html", {"request": request})

@app.get("/mem_selects")
async def mem_selects():
    ed = memDao()
    mems = ed.selects()
    return JSONResponse(mems)

@app.post("/mem_select")
async def mem_select(mem:Mem):
    ed = memDao()
    mems = ed.select(mem.m_seq)
    return JSONResponse(mems)

@app.post("/mem_insert")
async def mem_insert(mem:Mem):
    ed = memDao()
    cnt = ed.insert(mem.e_name,mem.sex,mem.addr)
    return JSONResponse(cnt)

@app.post("/mem_update")
async def mem_update(mem:Mem):
    ed = memDao()
    cnt = ed.update(emp.e_id,emp.e_name,emp.sex,emp.addr)
    return JSONResponse(cnt)

@app.post("/mem_delete")
async def mem_delete(mem:Mem):
    ed = memDao()
    cnt = ed.delete(emp.e_id)
    return JSONResponse(cnt)
    #uvicorn myajax:app --reload